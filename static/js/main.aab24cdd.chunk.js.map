{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ABC","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","directionOrder","setDirectionOrder","visibleGoods","goodFromServer","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","prevOrder","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,MACjBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,mBAAS,OAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMC,EA7BR,SAA0BC,EAA1B,GAA0E,IAA9BL,EAA6B,EAA7BA,UAAWE,EAAkB,EAAlBA,eAC/CI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAElC,QACE,OAAO,MAKQ,SAAnBE,GACFI,EAAcK,UAGTL,EAOcM,CACnBjB,EACA,CAAEK,YAAWE,mBAYf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYhB,IAAcJ,IANhC,iCAYA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYhB,IAAcH,IANhC,4BAYA,wBACEiB,QArCa,WACnBX,GAAkB,SAAAc,GAAS,MAAmB,QAAdA,EAAsB,OAAS,UAqCzDF,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAA+B,QAAnBd,IANlB,qBAYA,wBACEY,QA7CW,WACjBb,EAAa,IACbE,EAAkB,QA4CZY,KAAK,SACLF,UAAU,4BAHZ,sBASF,6BACGT,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YChHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aab24cdd.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ABC = 'abc';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goodFromServer, { sortField, directionOrder }) {\n  const preparedGoods = [...goodFromServer];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ABC:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (directionOrder === 'desc') {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [directionOrder, setDirectionOrder] = useState('asc');\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, directionOrder },\n  );\n\n  const reverseOrder = () => {\n    setDirectionOrder(prevOrder => (prevOrder === 'asc' ? 'desc' : 'asc'));\n  };\n\n  const resetOrder = () => {\n    setSortField('');\n    setDirectionOrder('asc');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ABC)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ABC },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverseOrder}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': directionOrder === 'asc' },\n          )}\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={resetOrder}\n          type=\"button\"\n          className=\"button is-danger is-light\"\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}